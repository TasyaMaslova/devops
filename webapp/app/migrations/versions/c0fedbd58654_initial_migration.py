"""Initial migration

Revision ID: c0fedbd58654
Revises: 
Create Date: 2024-05-22 22:52:51.079257

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c0fedbd58654'
down_revision = None
branch_labels = None
depends_on = None
from models import Users
from uuid import uuid4

user = Users()

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('genres',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_genre', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_genres'))
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_role', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles'))
    )
    op.create_table('films',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_film', sa.String(length=128), nullable=False),
    sa.Column('director', sa.String(length=128), nullable=False),
    sa.Column('uuid_poster', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('id_genre', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_genre'], ['genres.id'], name=op.f('fk_films_id_genre_genres')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_films'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('lastname', sa.String(length=128), nullable=False),
    sa.Column('login', sa.String(length=32), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('id_role', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_role'], ['roles.id'], name=op.f('fk_users_id_role_roles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('login', name=op.f('uq_users_login'))
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_film', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('text_comment', sa.Text(), nullable=False),
    sa.Column('id_parent', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_film'], ['films.id'], name=op.f('fk_comments_id_film_films')),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], name=op.f('fk_comments_id_user_users')),
    sa.ForeignKeyConstraint(['id_parent'], ['comments.id'], name=op.f('fk_comments_id_parent_comments')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comments'))
    )
    op.create_table('stills',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('id_film', sa.Integer(), nullable=False),
    sa.Column('name_file', sa.String(length=128), nullable=False),
    sa.ForeignKeyConstraint(['id_film'], ['films.id'], name=op.f('fk_stills_id_film_films')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stills'))
    )
    op.create_table('watched_films',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_film', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_film'], ['films.id'], name=op.f('fk_watched_films_id_film_films')),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], name=op.f('fk_watched_films_id_user_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_watched_films'))
    )
    # ### end Alembic commands ###
    data_upgrades()

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('watched_films')
    op.drop_table('stills')
    op.drop_table('comments')
    op.drop_table('users')
    op.drop_table('films')
    op.drop_table('roles')
    op.drop_table('genres')
    # ### end Alembic commands ###

def data_upgrades():

    genre_table = sa.table('genres',
                            sa.column('id', sa.Integer),
                            sa.column('name_genre', sa.String))
    roles_table = sa.table('roles',
                           sa.column('id', sa.Integer),
                           sa.column('name_role', sa.String))
    films_table = sa.table('films',
                           sa.column('id', sa.Integer),
                           sa.column('name_film', sa.String),
                           sa.column('director', sa.String),
                           sa.column('uuid_poster', sa.String),
                           sa.column('description', sa.Text),
                           sa.column('id_genre', sa.Integer))
    users_table = sa.table('users',
                           sa.column('id', sa.Integer),
                           sa.column('name', sa.String),
                           sa.column('lastname', sa.String),
                           sa.column('login', sa.String),
                           sa.column('password_hash', sa.String),
                           sa.column('id_role', sa.Integer))
    comments_table = sa.table('comments',
                           sa.column('id', sa.Integer),
                           sa.column('id_film', sa.Integer),
                           sa.column('id_user', sa.Integer),
                           sa.column('text_comment', sa.Text))
    stills_table = sa.table('stills',
                            sa.column('id', sa.String),
                            sa.column('id_film', sa.Integer),
                            sa.column('name_file', sa.String))

    op.bulk_insert(genre_table,
        [
            {'id': 1, 'name_genre': 'Фантастика'},
            {'id': 2, 'name_genre': 'Фэнтези'},
            {'id': 3, 'name_genre': 'Детектив'},
            {'id': 4, 'name_genre': 'Драма'},
            {'id': 5, 'name_genre': 'Мелодрама'},
            {'id': 6, 'name_genre': 'Триллер'},
            {'id': 7, 'name_genre': 'Комедия'},
            {'id': 8, 'name_genre': 'Боевик'},
            {'id': 9, 'name_genre': 'Приключения'},
            {'id': 10, 'name_genre': 'Ужасы'},
            {'id': 11, 'name_genre': 'Биография'},
            {'id': 12, 'name_genre': 'Мюзикл'},
            {'id': 13, 'name_genre': 'Военный'},
        ])
    op.bulk_insert(roles_table,
        [
            {'id': 1, 'name_role': 'Администратор'},
            {'id': 2, 'name_role': 'Пользователь'},
        ])
    op.bulk_insert(films_table,
        [
            {'id': 1, 'name_film': 'Ханна. Совершенное оружие', 'director': 'Джо Райт', 'uuid_poster': uuid4().hex,
                'description': 'Хрупкая на первый взгляд Ханна – идеальный солдат. Тайна ее рождения ревностно охраняется \
                американским правительством. Ее миссия – отомстить бывшим работодателям отца, некогда секретного агента. \
                Спецслужбы всего мира выходят на след девочки-убийцы. Охота начинается…', 'id_genre': 8},
            {'id': 2, 'name_film': 'Няньки', 'director': 'Джон Парагон', 'uuid_poster': uuid4().hex,
                'description': 'Владельцу транспортной компании угрожают, намекая на двух племянников — близнецов, оставшихся\
                без родителей и живущих у него. И тогда он нанимает двух бесшабашных братьев-качков в качестве телохранителей. \
                Малолетние племяннички дают прикурить нянькам, изобретая все новые и новые каверзы. Но Питера и Дэвида голыми \
                руками не возьмешь: в конце концов, они находят общий язык с маленькими разбойниками. Два великовозрастных шалопая \
                находят свое зеркальное отражение в двух юных проказниках.', 'id_genre': 7},
            {'id': 3, 'name_film': 'Майор Пэйн', 'director': 'Ник Кастл', 'uuid_poster': uuid4().hex, 
                'description': 'Майору никак не присвоят звание полковника по одной причине - он умеет только убивать, ни на что другое \
                он просто не способен. Его отправляют в отставку. Работа в полиции ему не подходит, и наш герой умирает от скуки \
                в одном из номеров отеля. Неожиданно он получает предложение стать инструктором по военной подготовке в военном учебном \
                заведении. О том, как сложатся отношения «жестокосердного солдафона» с юными подопечными и одной весьма привлекательной \
                преподавательницей рассказывает эта веселая комедия, полная забавных шуток и смешных ситуаций.', 'id_genre': 7},
            {'id': 4, 'name_film': 'Если я останусь', 'director': 'Р.Дж. Катлер', 'uuid_poster': uuid4().hex, 
                'description': 'Мия — талантливая девушка, влюбленная в классическую музыку, в свою виолончель и рокера Адама. \
                Но после автокатастрофы Мия оказывается в коме. Пока тело девушки лежит в больнице, ее душа должна решить, хочет \
                ли она жить дальше или же лучше отправиться в мир иной вслед за своими родными.  ', 'id_genre': 5},
            {'id': 5, 'name_film': 'Милые кости', 'director': 'Питер Джексон', 'uuid_poster': uuid4().hex, 
                'description': 'Фильм рассказывает о переживаниях четырнадцатилетней девушки, изнасилованной и убитой маньяком-соседом. \
                Наблюдая за жизнью домочадцев с небес, героиня мечтает о простых подростковых радостях и жаждет поимки душегуба. ', 'id_genre': 2},
            {'id': 6, 'name_film': 'Матрица времени', 'director': 'Ри Руссо-Янг', 'uuid_poster': uuid4().hex, 
                'description': 'Саманта - крутая девчонка, которой всегда и во всем везло. Но в тот день, в пятницу, 12 февраля, что-то \
                пошло не так, а потом та авария на трассе… Саманта оказалась в заколдованном круге проклятого дня, и теперь она вынуждена \
                проживать ужас той пятницы снова и снова. Чтобы распутать петлю времени, она должна вычислить ошибку и исправить неверный \
                шаг. Но каждый раз что-то не срабатывает…', 'id_genre': 4},
            {'id': 7, 'name_film': 'Побег из Шоушенка', 'director': 'Фрэнк Дарабонт', 'uuid_poster': uuid4().hex, 
                'description': 'Бухгалтер Энди Дюфрейн обвинён в убийстве собственной жены и её любовника. Оказавшись в тюрьме под названием \
                Шоушенк, он сталкивается с жестокостью и беззаконием, царящими по обе стороны решётки. Каждый, кто попадает в эти стены, \
                становится их рабом до конца жизни. Но Энди, обладающий живым умом и доброй душой, находит подход как к заключённым, так \
                и к охранникам, добиваясь их особого к себе расположения. ', 'id_genre': 4},
            {'id': 8, 'name_film': 'Ла-Ла-Ленд', 'director': 'Дэмьен Шазелл', 'uuid_poster': uuid4().hex, 
                'description': 'Это история любви старлетки, которая между прослушиваниями подает кофе состоявшимся кинозвездам, и \
                фанатичного джазового музыканта, вынужденного подрабатывать в заштатных барах. Но пришедший к влюбленным успех начинает \
                подтачивать их отношения.', 'id_genre': 12},
            {'id': 9, 'name_film': 'Голос монстра', 'director': 'Хуан Антонио Байона', 'uuid_poster': uuid4().hex, 
                'description': '13-летний Конор вынужден принять известие о скорой смерти матери. Смириться с этим, пережить и прийти \
                к пониманию ему помогает монстр из снов — старое тисовое дерево, которое превращается в чудовище и рассказывает мальчику \
                разные истории.  ', 'id_genre': 2},
            {'id': 10, 'name_film': 'Мальчик в полосатой пижаме', 'director': 'Марк Херман', 'uuid_poster': uuid4().hex, 
                'description': 'История, происходящая во время Второй мировой войны и показанная сквозь глаза невинного и ничего не \
                подозревающего о происходящих событиях Бруно, восьмилетнего сына коменданта концентрационного лагеря. Его случайное \
                знакомство и дружба с еврейским мальчиком по другую сторону ограды лагеря, в конечном счете, приводит к самым \
                непредсказуемым и ошеломительным последствиям.', 'id_genre': 13},
            {'id': 11, 'name_film': 'Остров проклятых', 'director': 'Мартин Скорсезе', 'uuid_poster': uuid4().hex, 
                'description': 'Два американских судебных пристава отправляются на один из островов в штате Массачусетс, чтобы \
                расследовать исчезновение пациентки клиники для умалишенных преступников. При проведении расследования им придется \
                столкнуться с паутиной лжи, обрушившимся ураганом и смертельным бунтом обитателей клиники.  ', 'id_genre': 6},
            {'id': 12, 'name_film': 'Пролетая над гнездом кукушки', 'director': 'Милош Форман', 'uuid_poster': uuid4().hex, 
                'description': 'Рэндла Патрика Макмёрфи, патологического преступника и бунтаря, переводят из колонии в психиатрическую \
                клинику, чтобы установить, является он душевнобольным или нет. В клинике он обнаруживает, что отделение контролирует \
                хладнокровная, строгая и одержимая распорядком старшая медсестра Милдред Рэтчед. Макмёрфи намерен не подчиняться \
                абсурдным, на его взгляд, правилам и одновременно повеселиться от души. Его бунтарская натура заражает других \
                пациентов, но сестра Рэтчед решительно настроена пресечь это. ', 'id_genre': 4},
            {'id': 13, 'name_film': 'Ревием по мечте', 'director': 'Даррен Аронофски', 'uuid_poster': uuid4().hex, 
                'description': 'Каждый стремится к своей заветной мечте. Сара Голдфарб мечтала сняться в известном телешоу, ее сын \
                Гарольд с другом Тайроном — сказочно разбогатеть, подруга Гарольда Мэрион грезила о собственном модном магазине, \
                но на их пути были всевозможные препятствия. Все они выбирают неочевидные пути достижения своих целей, и мечты \
                по-прежнему остаются недостижимыми, а жизни героев рушатся безвозвратно. ', 'id_genre': 4},
            {'id': 14, 'name_film': 'Разум в огне', 'director': 'Джерард Барретт', 'uuid_poster': uuid4().hex, 
                'description': 'Успешная девушка однажды просыпается в медицинской клинике. Она абсолютно не помнит, что с ней \
                произошло, и как она сюда попала, ведь до пробуждения она вела довольно обычный образ жизни. У неё была хорошая \
                перспективная работа, жених, и ничто не предвещало беды. Теперь ей ставят различные диагнозы, но ни один не \
                подтверждается.', 'id_genre': 11},
            {'id': 15, 'name_film': 'Барби', 'director': 'Грета Гервиг', 'uuid_poster': uuid4().hex, 
                'description': 'Самая обыкновенная стереотипная Барби живёт в великолепном розовом Барбиленде, и каждый её день \
                идеален. Она меняет наряды, загорает на пляже, проводит время с другими Барби, день заканчивается шумной вечеринкой \
                с танцами, и в этой позитивной кутерьме с блёстками влюблённый Кен — всего лишь приложение к Барби. Однажды куклу \
                посещают мысли о смерти, и её сделанные под туфли с каблуками ноги вдруг становятся плоскими. Чтобы разобраться в \
                происходящем и вернуть привычный пластмассовый мир, Барби придётся отправиться в мир реальный и найти там свою \
                девочку-хозяйку. За ней увязывается не мыслящий жизни без своего кумира Кен. ', 'id_genre': 7},
            {'id': 16, 'name_film': 'Сайлент Хилл', 'director': 'Кристоф Ган', 'uuid_poster': uuid4().hex, 
                'description': 'Доктора не могут найти лекарство от таинственного заболевания Шэрон, но её мать Роуз отказывается \
                отдавать ребёнка в психиатрическую лечебницу. Вместе с дочерью она отправляется в Сайлент Хилл - город, название \
                которого Шэрон постоянно твердит во сне. Роуз убеждена, что именно здесь она найдёт ответы, в которых так нуждается. ', 'id_genre': 10},
            {'id': 17, 'name_film': 'Пираты Карибского моря: На краю света', 'director': 'Гор Вербински', 'uuid_poster': uuid4().hex, 
                'description': 'Новые приключения Джека Воробья и его друзей Уилла Тернера и Элизабет Суонн. На этот раз Уиллу и \
                Элизабет придется объединиться с самим Капитаном Барбоссой для того, чтобы отправиться на край света и спасти \
                своего друга — Джека. Ситуация осложняется тем, что Элизабет попадает к сингапурским пиратам… ', 'id_genre': 9},
            {'id': 18, 'name_film': 'Форсаж', 'director': 'Роб Коэн', 'uuid_poster': uuid4().hex, 
                'description': 'Его зовут Брайан, и он — фанат турбин и нитроускорителей. Он пытается попасть в автобанду легендарного \
                Доминика Торетто, чемпиона опасных и незаконных уличных гонок. Брайан также полицейский, и его задание — втереться в \
                доверие к Торетто, подозреваемому в причастности к дерзким грабежам грузовиков, совершаемым прямо на ходу.', 'id_genre': 8},
            {'id': 19, 'name_film': 'Время первых', 'director': 'Дмитрий Киселёв', 'uuid_poster': uuid4().hex, 
                'description': '1960-е, разгар холодной войны. Две супердержавы СССР и США бьются за первенство в космической гонке. Пока \
                СССР впереди, на очереди — выход человека в открытый космос. За две недели до старта взрывается тестовый корабль. Времени \
                на выявление причин нет. Опытный военный лётчик Павел Беляев и его напарник Алексей Леонов, необстрелянный и горячий, \
                мечтающий о подвиге, — два человека, готовые шагнуть в неизвестность. Но никто не мог даже предположить всего, с чем \
                им предстояло столкнуться в полёте. В этой миссии всё, что только могло, пошло не так. ', 'id_genre': 11},
            {'id': 20, 'name_film': 'Солнцестояние', 'director': 'Ари Астер', 'uuid_poster': uuid4().hex, 
                'description': 'День летнего солнцестояния — древний праздник, который во всех культурах окутан мистическим ореолом. \
                В отрезанном от цивилизованного мира шведском поселении в этот день проводятся уникальные обряды с многовековой \
                традицией. Именно туда отправляется группа молодых американских студентов-антропологов, прихватив с собой девушку \
                одного из них. Однако вскоре после прибытия друзья выясняют, что местные обряды далеко не безобидны.', 'id_genre': 10},
            {'id': 21, 'name_film': 'Игра Эндера', 'director': 'Гэвин Худ', 'uuid_poster': uuid4().hex, 
                'description': 'Действие происходит в 2135 году. Человечество пережило два вторжения инопланетной расы «жукеров», \
                лишь чудом уцелев, и готовится к очередному вторжению. Для поиска пилотов и военачальников, способных принести Земле \
                победу, создаётся военная школа, в которую отправляют самых талантливых детей. Среди этих детей Эндрю (Эндер) Виггин, \
                будущий полководец Международного флота Земли и единственная надежда человечества на спасение. ', 'id_genre': 1},
            {'id': 22, 'name_film': 'Адвокат дьявола', 'director': 'Тейлор Хэкфорд', 'uuid_poster': uuid4().hex, 
                'description': 'В Нью-Йорк по приглашению главы крупного юридического концерна прибывает Кевин Ломакс, молодой адвокат. \
                До этого он был известен тем, что защищал исключительно негодяев и притом не проиграл ни одного процесса. На новом месте \
                работы он вполне счастлив, он живет в роскошной квартире с любящей женой, его окружают интересные люди. ', 'id_genre': 6},
            {'id': 23, 'name_film': 'Интерстеллар', 'director': 'Кристофер Нолан', 'uuid_poster': uuid4().hex, 
                'description': 'Когда засуха, пыльные бури и вымирание растений приводят человечество к продовольственному кризису, \
                коллектив исследователей и учёных отправляется сквозь червоточину (которая предположительно соединяет области \
                пространства-времени через большое расстояние) в путешествие, чтобы превзойти прежние ограничения для космических \
                путешествий человека и найти планету с подходящими для человечества условиями. ', 'id_genre': 1},
            {'id': 24, 'name_film': 'Вечное сияние чистого разума', 'director': 'Мишель Гондри', 'uuid_poster': uuid4().hex, 
                'description': 'Застенчивый и меланхоличный Джоэл живёт ничем не примечательной серой и унылой жизнью. Но однажды \
                вместо привычного рабочего маршрута молодой человек вдруг садится на электричку в другом направлении и устремляется \
                к морю. На песчаном берегу Джоэл замечает девушку с ярко-синими волосами. На обратном пути они знакомятся в вагоне \
                электрички и парень понимает, что у них с Клементиной очень много общего, как будто он уже знает эту девушку. \
                Совсем скоро Джоэл поймёт, что действительно был знаком с ней, более того - они были парой. ', 'id_genre': 5},
            {'id': 25, 'name_film': 'По соображениях совести', 'director': 'Мэл Гибсон', 'uuid_poster': uuid4().hex, 
                'description': 'Медик американской армии времён Второй мировой войны Десмонд Досс, который служил во время битвы \
                за Окинаву, отказывается убивать людей и становится первым идейным уклонистом в американской истории, удостоенным \
                Медали Почёта.  ', 'id_genre': 13},
            {'id': 26, 'name_film': 'Шерлок Холмс', 'director': 'Гай Ричи', 'uuid_poster': uuid4().hex, 
                'description': 'Величайший в истории сыщик Шерлок Холмс вместе со своим верным соратником Ватсоном вступают в \
                схватку, требующую нешуточной физической и умственной подготовки, ведь их враг представляет угрозу для всего \
                Лондона. ', 'id_genre': 9},
            {'id': 27, 'name_film': 'Величайший шоумен', 'director': 'Майкл Грейси', 'uuid_poster': uuid4().hex, 
                'description': 'Финеас Тейлор Барнум всегда мечтал войти в историю, но все его занятия не приносили ему \
                удовольствия. И когда, казалось, весь мир обернулся против него, он решает пойти вслед за своей мечтой. \
                Барнум создает завораживающее представление-сенсацию, которое стало рождением мирового шоу-бизнеса.', 'id_genre': 12},
            {'id': 28, 'name_film': 'Достать ножи', 'director': '', 'uuid_poster': uuid4().hex, 
                'description': '', 'id_genre': 3},
            {'id': 29, 'name_film': 'Убийство в восточном экспрессе', 'director': 'Кеннет Брана', 'uuid_poster': uuid4().hex, 
                'description': 'Путешествие на одном из самых роскошных поездов Европы неожиданно превращается в одну из \
                самых стильных и захватывающих загадок в истории. Фильм рассказывает историю тринадцати пассажиров поезда, \
                каждый из которых находится под подозрением. И только сыщик должен как можно быстрее разгадать головоломку, \
                прежде чем преступник нанесет новый удар.', 'id_genre': 3},
            {'id': 30, 'name_film': 'Очень странные дела', 'director': 'Мэтт Даффер', 'uuid_poster': uuid4().hex, 
                'description': '1980-е годы, тихий провинциальный американский городок. Благоприятное течение местной жизни \
                нарушает загадочное исчезновение подростка по имени Уилл. Выяснить обстоятельства дела полны решимости родные \
                    мальчика и местный шериф, также события затрагивают лучшего друга Уилла – Майка. Он начинает собственное \
                    расследование. Майк уверен, что близок к разгадке, и теперь ему предстоит оказаться в эпицентре \
                    ожесточенной битвы потусторонних сил. ', 'id_genre': 10},
            {'id': 31, 'name_film': 'Леденящие душу приключения Сабрины', 'director': 'Салли Ричардсон-Уитфилд', 'uuid_poster': uuid4().hex, 
                'description': 'Ведьма Сабрина пытается найти истинную себя между натурами смертной и ведьмы, при этом ей \
                придётся противостоять злым силам, которые угрожают ей, её семье и всему миру людей.', 'id_genre': 10},
            {'id': 32, 'name_film': 'Американская история ужасов', 'director': 'Райан Мёрфи', 'uuid_poster': uuid4().hex, 
                'description': 'Первый сезон. Семейство Хармонов переезжает из Бостона в Лос-Анджелес, чтобы начать новую \
                жизнь, и поселяются в старинном отреставрированном особняке, не представляя, что его предыдущие жильцы \
                так и не нашли покоя после смерти. Второй сезон. Журналистка приезжает в лечебницу для душевнобольных \
                преступников в надежде снять репортаж о новоприбывшем маньяке по прозвищу Кровавый Лик. Третий сезон. \
                Шабаш ведьм, замаскированный под элитный пансион для одаренных девушек, пытается защитить последних \
                представительниц этого вида от вымирания. Четвёртый сезон. История одного из последних цирков уродов \
                в 1950-х годах. Пятый сезон. Отель в центральной части Лос-Анджелеса скрывает в своих стенах множество \
                секретов. Шестой сезон...', 'id_genre': 10},
            {'id': 33, 'name_film': 'Сверхъестественное', 'director': 'Эрик Крипке', 'uuid_poster': uuid4().hex, 
                'description': 'Сериал рассказывает о приключениях братьев Сэма и Дина Винчестеров, которые путешествуют \
                по Соединённым Штатам на чёрном автомобиле Chevrolet Impala 1967 года, расследуют паранормальные явления, \
                многие из которых основаны на американских городских легендах и фольклоре, и сражаются с порождениями \
                зла, такими как демоны и призраки.', 'id_genre': 2},
            {'id': 34, 'name_film': 'Уэнсдей', 'director': 'Тим Бёртон', 'uuid_poster': uuid4().hex, 
                'description': 'Уэнсдэй, дочь Гомеса и Мортиши Аддамс, учится в академии Nevermore. \
                Ей предстоит освоить экстрасенсорные способности, чтобы остановить местного серийного \
                убийцу и раскрыть тайну родителей. ', 'id_genre': 2},
            {'id': 35, 'name_film': 'Н2О: Просто добавь воды', 'director': 'Джеффри Уокер', 'uuid_poster': uuid4().hex, 
                'description': 'Три девочки-подростка живут самой обычной жизнью: обновки, пляж, мальчики, но однажды \
                они попадают в древнюю пещеру, где с ними происходит волшебное превращение. После этого их жизнь уже \
                никогда не будет прежней! Эмма, Клео и Рикки приобретают волшебную силу над водой и в мгновение \
                ока превращаются в русалок!', 'id_genre': 2},
            {'id': 36, 'name_film': 'Аркейн', 'director': 'Арно Делор', 'uuid_poster': uuid4().hex, 
                'description': 'История разворачивается в утопическом краю Пилтовер и жестоком подземном мире Заун \
                и рассказывает о становлении двух легендарных чемпионов Лиги и о той силе, что разведёт их по разные \
                стороны баррикад', 'id_genre': 1},
            {'id': 37, 'name_film': 'Аватар: Легенда об Аанге', 'director': 'Майкл Данте Димартино', 'uuid_poster': uuid4().hex, 
                'description': 'Мир разделен на четыре народа: Водные племена, королевство Земли, Воздушные кочевники \
                и Огненная нация. Представители каждого народа обладают способностями управления своей стихией и именуют \
                себя магами Воды, Земли, Воздуха или Огня. Только Аватар является властелином всех четырех стихий. \
                Его роль заключается в поддержке баланса между народами и сохранении мирового порядка. Однажды \
                предводитель Огненной нации Хозяин Огня развязал войну с целью подчинить себе остальные народы. \
                Отвественность за спасение мира легла на плечи двенадцатилетного мальчика, мага Воздуха по имени \
                Аанг, который узнал, что он Аватар. Аанг отправляется в опасное путешествие вместе со своими отважными \
                друзьями из племени Воды, Катарой и ее братом Соккой...', 'id_genre': 9},
            {'id': 38, 'name_film': 'Коралина в стране кошмаров', 'director': 'Генри Селик', 'uuid_poster': uuid4().hex, 
                'description': 'Маленькая Коралина попадает в другой мир, скрытый за секретной дверцей. Этот мир — ее \
                альтернативная жизнь, которая не перестает ее радовать, все здесь хорошо, но только до поры до времени. \
                Однажды она понимает, что ее настоящим родителям за ее проделки угрожает смертельная опасность.', 'id_genre': 2},
            {'id': 39, 'name_film': 'Город героев', 'director': 'Крис Уильямс', 'uuid_poster': uuid4().hex, 
                'description': 'Юный Хиро Хамада — прирожденный изобретатель и гений конструирования роботов. Вместе со \
                старшим братом Тадаши они воплощают в жизнь самые передовые идеи в Техническом университете города будущего \
                Сан-Франсокио. После серии загадочных событий друзья оказываются в центре коварного заговора. Отчаявшись, \
                Хиро решает использовать веселого и добродушного экспериментального робота Бэймакса, перепрограммировав \
                его в неуязвимую боевую машину. ', 'id_genre': 1},
            {'id': 40, 'name_film': 'Труп невесты', 'director': 'Тим Бёртон', 'uuid_poster': uuid4().hex, 
                'description': 'Действие развивается в европейской деревушке XIX века. Главного героя – молодого человека \
                Виктора – силы тьмы утаскивают в преисподнюю и женят там на таинственном Трупе Невесты, в то время как его \
                настоящая невеста Виктория ожидает своего жениха в мире живых.Несмотря на то, что проживание в Царстве мертвых \
                оказывается много интересней, чем его привычный викторианский образ жизни, Виктор понимает, что свою \
                единственную любовь он не променяет ни на что ни в одном из альтернативных миров… ', 'id_genre': 12},
        ])
    op.bulk_insert(users_table,
        [
            {'id': 1, 'name': 'Полина', 'lastname': 'Самсонова', 'login': 'polly', 'password_hash': user.set_password('adminpolly'), 'id_role': 1},
            {'id': 2, 'name': 'Александр', 'lastname': 'Абрамов', 'login': 'sasha', 'password_hash': user.set_password('sasha'), 'id_role': 2},
            {'id': 3, 'name': 'Виктор', 'lastname': 'Афанасьев', 'login': 'victor', 'password_hash': user.set_password('victor'), 'id_role': 2},
            {'id': 4, 'name': 'Ксения', 'lastname': 'Воронова', 'login': 'ksenia', 'password_hash': user.set_password('ksenia'), 'id_role': 2},
        ])
    op.bulk_insert(comments_table,
        [
            {'id': 1, 'id_film': 1, 'id_user': 2, 'text_comment': 'Отличный фильм с потрясающей актерской игрой!'},
            {'id': 2, 'id_film': 1, 'id_user': 3, 'text_comment': 'Сюжет держит в напряжении до самого конца.'},
            {'id': 3, 'id_film': 2, 'id_user': 4, 'text_comment': 'Замечательная кинематография и спецэффекты.'},
            {'id': 4, 'id_film': 3, 'id_user': 2, 'text_comment': 'Фильм оставляет глубокое впечатление.'},
            {'id': 5, 'id_film': 4, 'id_user': 3, 'text_comment': 'Смешной и трогательный одновременно.'},
            {'id': 6, 'id_film': 8, 'id_user': 4, 'text_comment': 'Смотрится на одном дыхании, рекомендую!'},
            {'id': 7, 'id_film': 7, 'id_user': 2, 'text_comment': 'Очень интересный и увлекательный сюжет.'},
            {'id': 8, 'id_film': 4, 'id_user': 2, 'text_comment': 'Фильм вызывает бурю эмоций!'},
            {'id': 9, 'id_film': 1, 'id_user': 4, 'text_comment': 'Прекрасный саундтрек и визуальные эффекты.'},
            {'id': 10, 'id_film': 10, 'id_user': 2, 'text_comment': 'Стоит посмотреть хотя бы раз!'},
        ])
    op.bulk_insert(stills_table,
        [
            {'id': uuid4().hex, 'id_film': 1, 'name_file': '1_1'},
            {'id': uuid4().hex, 'id_film': 1, 'name_file': '1_2'},
            {'id': uuid4().hex, 'id_film': 1, 'name_file': '1_3'},
            {'id': uuid4().hex, 'id_film': 2, 'name_file': '2_1'},
            {'id': uuid4().hex, 'id_film': 2, 'name_file': '2_2'},
            {'id': uuid4().hex, 'id_film': 2, 'name_file': '2_3'},
            {'id': uuid4().hex, 'id_film': 3, 'name_file': '3_1'},
            {'id': uuid4().hex, 'id_film': 3, 'name_file': '3_2'},
            {'id': uuid4().hex, 'id_film': 3, 'name_file': '3_3'},
            {'id': uuid4().hex, 'id_film': 4, 'name_file': '4_1'},
            {'id': uuid4().hex, 'id_film': 4, 'name_file': '4_2'},
            {'id': uuid4().hex, 'id_film': 4, 'name_file': '4_3'},
            {'id': uuid4().hex, 'id_film': 5, 'name_file': '5_1'},
            {'id': uuid4().hex, 'id_film': 5, 'name_file': '5_2'},
            {'id': uuid4().hex, 'id_film': 5, 'name_file': '5_3'},
            {'id': uuid4().hex, 'id_film': 6, 'name_file': '6_1'},
            {'id': uuid4().hex, 'id_film': 6, 'name_file': '6_2'},
            {'id': uuid4().hex, 'id_film': 6, 'name_file': '6_3'},
            {'id': uuid4().hex, 'id_film': 7, 'name_file': '7_1'},
            {'id': uuid4().hex, 'id_film': 7, 'name_file': '7_2'},
            {'id': uuid4().hex, 'id_film': 7, 'name_file': '7_3'},
            {'id': uuid4().hex, 'id_film': 8, 'name_file': '8_1'},
            {'id': uuid4().hex, 'id_film': 8, 'name_file': '8_2'},
            {'id': uuid4().hex, 'id_film': 8, 'name_file': '8_3'},
            {'id': uuid4().hex, 'id_film': 9, 'name_file': '9_1'},
            {'id': uuid4().hex, 'id_film': 9, 'name_file': '9_2'},
            {'id': uuid4().hex, 'id_film': 9, 'name_file': '9_3'},
            {'id': uuid4().hex, 'id_film': 10, 'name_file': '10_1'},
            {'id': uuid4().hex, 'id_film': 10, 'name_file': '10_2'},
            {'id': uuid4().hex, 'id_film': 10, 'name_file': '10_3'},
            {'id': uuid4().hex, 'id_film': 11, 'name_file': '11_1'},
            {'id': uuid4().hex, 'id_film': 11, 'name_file': '11_2'},
            {'id': uuid4().hex, 'id_film': 11, 'name_file': '11_3'},
            {'id': uuid4().hex, 'id_film': 12, 'name_file': '12_1'},
            {'id': uuid4().hex, 'id_film': 12, 'name_file': '12_2'},
            {'id': uuid4().hex, 'id_film': 12, 'name_file': '12_3'},
            {'id': uuid4().hex, 'id_film': 13, 'name_file': '13_1'},
            {'id': uuid4().hex, 'id_film': 13, 'name_file': '13_2'},
            {'id': uuid4().hex, 'id_film': 13, 'name_file': '13_3'},
            {'id': uuid4().hex, 'id_film': 14, 'name_file': '14_1'},
            {'id': uuid4().hex, 'id_film': 14, 'name_file': '14_2'},
            {'id': uuid4().hex, 'id_film': 14, 'name_file': '14_3'},
            {'id': uuid4().hex, 'id_film': 15, 'name_file': '15_1'},
            {'id': uuid4().hex, 'id_film': 15, 'name_file': '15_2'},
            {'id': uuid4().hex, 'id_film': 15, 'name_file': '15_3'},
            {'id': uuid4().hex, 'id_film': 16, 'name_file': '16_1'},
            {'id': uuid4().hex, 'id_film': 16, 'name_file': '16_2'},
            {'id': uuid4().hex, 'id_film': 16, 'name_file': '16_3'},
            {'id': uuid4().hex, 'id_film': 17, 'name_file': '17_1'},
            {'id': uuid4().hex, 'id_film': 17, 'name_file': '17_2'},
            {'id': uuid4().hex, 'id_film': 17, 'name_file': '17_3'},
            {'id': uuid4().hex, 'id_film': 18, 'name_file': '18_1'},
            {'id': uuid4().hex, 'id_film': 18, 'name_file': '18_2'},
            {'id': uuid4().hex, 'id_film': 18, 'name_file': '18_3'},
            {'id': uuid4().hex, 'id_film': 19, 'name_file': '19_1'},
            {'id': uuid4().hex, 'id_film': 19, 'name_file': '19_2'},
            {'id': uuid4().hex, 'id_film': 19, 'name_file': '19_3'},
            {'id': uuid4().hex, 'id_film': 20, 'name_file': '20_1'},
            {'id': uuid4().hex, 'id_film': 20, 'name_file': '20_2'},
            {'id': uuid4().hex, 'id_film': 20, 'name_file': '20_3'},
            {'id': uuid4().hex, 'id_film': 21, 'name_file': '21_1'},
            {'id': uuid4().hex, 'id_film': 21, 'name_file': '21_2'},
            {'id': uuid4().hex, 'id_film': 21, 'name_file': '21_3'},
            {'id': uuid4().hex, 'id_film': 22, 'name_file': '22_1'},
            {'id': uuid4().hex, 'id_film': 22, 'name_file': '22_2'},
            {'id': uuid4().hex, 'id_film': 22, 'name_file': '22_3'},
            {'id': uuid4().hex, 'id_film': 23, 'name_file': '23_1'},
            {'id': uuid4().hex, 'id_film': 23, 'name_file': '23_2'},
            {'id': uuid4().hex, 'id_film': 23, 'name_file': '23_3'},
            {'id': uuid4().hex, 'id_film': 24, 'name_file': '24_1'},
            {'id': uuid4().hex, 'id_film': 24, 'name_file': '24_2'},
            {'id': uuid4().hex, 'id_film': 24, 'name_file': '24_3'},
            {'id': uuid4().hex, 'id_film': 25, 'name_file': '25_1'},
            {'id': uuid4().hex, 'id_film': 25, 'name_file': '25_2'},
            {'id': uuid4().hex, 'id_film': 25, 'name_file': '25_3'},
            {'id': uuid4().hex, 'id_film': 26, 'name_file': '26_1'},
            {'id': uuid4().hex, 'id_film': 26, 'name_file': '26_2'},
            {'id': uuid4().hex, 'id_film': 26, 'name_file': '26_3'},
            {'id': uuid4().hex, 'id_film': 27, 'name_file': '27_1'},
            {'id': uuid4().hex, 'id_film': 27, 'name_file': '27_2'},
            {'id': uuid4().hex, 'id_film': 27, 'name_file': '27_3'},
            {'id': uuid4().hex, 'id_film': 28, 'name_file': '28_1'},
            {'id': uuid4().hex, 'id_film': 28, 'name_file': '28_2'},
            {'id': uuid4().hex, 'id_film': 28, 'name_file': '28_3'},
            {'id': uuid4().hex, 'id_film': 29, 'name_file': '29_1'},
            {'id': uuid4().hex, 'id_film': 29, 'name_file': '29_2'},
            {'id': uuid4().hex, 'id_film': 29, 'name_file': '29_3'},
            {'id': uuid4().hex, 'id_film': 30, 'name_file': '30_1'},
            {'id': uuid4().hex, 'id_film': 30, 'name_file': '30_2'},
            {'id': uuid4().hex, 'id_film': 30, 'name_file': '30_3'},
            {'id': uuid4().hex, 'id_film': 31, 'name_file': '31_1'},
            {'id': uuid4().hex, 'id_film': 31, 'name_file': '31_2'},
            {'id': uuid4().hex, 'id_film': 31, 'name_file': '31_3'},
            {'id': uuid4().hex, 'id_film': 32, 'name_file': '32_1'},
            {'id': uuid4().hex, 'id_film': 32, 'name_file': '32_2'},
            {'id': uuid4().hex, 'id_film': 32, 'name_file': '32_3'},
            {'id': uuid4().hex, 'id_film': 33, 'name_file': '33_1'},
            {'id': uuid4().hex, 'id_film': 33, 'name_file': '33_2'},
            {'id': uuid4().hex, 'id_film': 33, 'name_file': '33_3'},
            {'id': uuid4().hex, 'id_film': 34, 'name_file': '34_1'},
            {'id': uuid4().hex, 'id_film': 34, 'name_file': '34_2'},
            {'id': uuid4().hex, 'id_film': 34, 'name_file': '34_3'},
            {'id': uuid4().hex, 'id_film': 35, 'name_file': '35_1'},
            {'id': uuid4().hex, 'id_film': 35, 'name_file': '35_2'},
            {'id': uuid4().hex, 'id_film': 35, 'name_file': '35_3'},
            {'id': uuid4().hex, 'id_film': 36, 'name_file': '36_1'},
            {'id': uuid4().hex, 'id_film': 36, 'name_file': '36_2'},
            {'id': uuid4().hex, 'id_film': 36, 'name_file': '36_3'},
            {'id': uuid4().hex, 'id_film': 37, 'name_file': '37_1'},
            {'id': uuid4().hex, 'id_film': 37, 'name_file': '37_2'},
            {'id': uuid4().hex, 'id_film': 37, 'name_file': '37_3'},
            {'id': uuid4().hex, 'id_film': 38, 'name_file': '38_1'},
            {'id': uuid4().hex, 'id_film': 38, 'name_file': '38_2'},
            {'id': uuid4().hex, 'id_film': 38, 'name_file': '38_3'},
            {'id': uuid4().hex, 'id_film': 39, 'name_file': '39_1'},
            {'id': uuid4().hex, 'id_film': 39, 'name_file': '39_2'},
            {'id': uuid4().hex, 'id_film': 39, 'name_file': '39_3'},
            {'id': uuid4().hex, 'id_film': 40, 'name_file': '40_1'},
            {'id': uuid4().hex, 'id_film': 40, 'name_file': '40_2'},
            {'id': uuid4().hex, 'id_film': 40, 'name_file': '40_3'},
        ])
